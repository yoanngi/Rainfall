/*
**  Code source généré par ghidra
**  Légèrement modifier pour que sa compile correctement
*/

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <stdbool.h> 

char *service;
char *auth;

int main(void)
{
  char cVar1;
  char *pcVar2;
  int iVar3;
  uint uVar4;
  unsigned char *pbVar5;
  unsigned char *pbVar6;
  bool bVar7;
  bool bVar8;
  bool bVar9;
  unsigned char bVar10;
  unsigned char local_90 [5];
  char local_8b [2];
  char acStack137 [125];
  
  bVar10 = 0;
  do {
    printf("%p, %p \n",auth,service);
    pcVar2 = fgets((char *)local_90,0x80,stdin);
    bVar7 = false;
    bVar9 = pcVar2 == (char *)0x0;
    if (bVar9) {
      return 0;
    }
    iVar3 = 5;
    pbVar5 = local_90;
    pbVar6 = (unsigned char *)"auth ";
    do {
      if (iVar3 == 0) break;
      iVar3 = iVar3 + -1;
      bVar7 = *pbVar5 < *pbVar6;
      bVar9 = *pbVar5 == *pbVar6;
      pbVar5 = pbVar5 + (uint)bVar10 * -2 + 1;
      pbVar6 = pbVar6 + (uint)bVar10 * -2 + 1;
    } while (bVar9);
    bVar8 = false;
    bVar7 = (!bVar7 && !bVar9) == bVar7;
    if (bVar7) {
      auth = (char *)malloc(4);
      *auth = 0;
      uVar4 = 0xffffffff;
      pcVar2 = local_8b;
      do {
        if (uVar4 == 0) break;
        uVar4 = uVar4 - 1;
        cVar1 = *pcVar2;
        pcVar2 = pcVar2 + (uint)bVar10 * -2 + 1;
      } while (cVar1 != '\0');
      uVar4 = ~uVar4 - 1;
      bVar8 = uVar4 < 0x1e;
      bVar7 = uVar4 == 0x1e;
      if (uVar4 < 0x1f) {
        strcpy((char *)auth,local_8b);
      }
    }
    iVar3 = 5;
    pbVar5 = local_90;
    pbVar6 = (unsigned char *)"reset";
    do {
      if (iVar3 == 0) break;
      iVar3 = iVar3 + -1;
      bVar8 = *pbVar5 < *pbVar6;
      bVar7 = *pbVar5 == *pbVar6;
      pbVar5 = pbVar5 + (uint)bVar10 * -2 + 1;
      pbVar6 = pbVar6 + (uint)bVar10 * -2 + 1;
    } while (bVar7);
    bVar9 = false;
    bVar7 = (!bVar8 && !bVar7) == bVar8;
    if (bVar7) {
      free(auth);
    }
    iVar3 = 6;
    pbVar5 = local_90;
    pbVar6 = (unsigned char *)"service";
    do {
      if (iVar3 == 0) break;
      iVar3 = iVar3 + -1;
      bVar9 = *pbVar5 < *pbVar6;
      bVar7 = *pbVar5 == *pbVar6;
      pbVar5 = pbVar5 + (uint)bVar10 * -2 + 1;
      pbVar6 = pbVar6 + (uint)bVar10 * -2 + 1;
    } while (bVar7);
    bVar8 = false;
    bVar7 = (!bVar9 && !bVar7) == bVar9;
    if (bVar7) {
      bVar8 = (unsigned char *)0xfffffff8 < local_90;
      bVar7 = acStack137 == (char *)0x0;
      service = strdup(acStack137);
    }
    iVar3 = 5;
    pbVar5 = local_90;
    pbVar6 = (unsigned char *)"login";
    do {
      if (iVar3 == 0) break;
      iVar3 = iVar3 + -1;
      bVar8 = *pbVar5 < *pbVar6;
      bVar7 = *pbVar5 == *pbVar6;
      pbVar5 = pbVar5 + (uint)bVar10 * -2 + 1;
      pbVar6 = pbVar6 + (uint)bVar10 * -2 + 1;
    } while (bVar7);
    if ((!bVar8 && !bVar7) == bVar8) {
      if (auth[8] == 0) {
        fwrite("Password:\n",1,10,stdout);
      }
      else {
        system("/bin/sh");
      }
    }
  } while( true );
}


/*
**  Code source simplifier
*/

#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <stdbool.h> 

char 			*auth;
char 			*service;


int     		 main(void)
{
	char 		buffer[125];
	int		i;
	char		*s1;
	char		*s2;

	while (1)
  	{
		printf("%p, %p \n", auth, service);
    		if (!fgets((char *)buffer, 0x80, (FILE *)stdin));
      			return (0);
		i = 5;
		s1 = buffer;
		s2 = "auth ";
		while (i >= 0 && *s1 != '\0' && *s1 == *s2)
		{
			s1++;
			s2++;
			i--;
		}
		if (i == 0)
		{
			auth = malloc(4);
			if (strlen(buffer + 5) < 30)
				strcpy(auth, buffer + 5)
		}
		i = 5;
		s1 = buffer;
		s2 = "reset";
		while (i >= 0 && *s1 != '\0' && *s1 == *s2)
		{
			s1++;
			s2++;
			i--;
		}
		if (i == 0)
		{
			free(auth);
		}
		i = 6;
		s1 = buffer;
		s2 = "service";
		while (i >= 0 && *s1 != '\0' && *s1 == *s2)
		{
			s1++;
			s2++;
			i--;
		}
		if (i == 0)
		{
			strdup(service, buffer + 7);
		}
		i = 5;
		s1 = buffer;
		s2 = "login";
		while (i >= 0 && *s1 != '\0' && *s1 == *s2)
		{
			s1++;
			s2++;
			i--;
		}
		if (i == 0)
		{
	  		if (auth[32] == 0)
				fwrite("Password:\n",1,10,stdout);
	  		else
				system("/bin/sh");
		}
  	}
	return (0);
}